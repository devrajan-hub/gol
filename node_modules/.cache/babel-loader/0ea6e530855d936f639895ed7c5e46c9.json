{"ast":null,"code":"import axios from 'axios';\nimport CircularJSON from 'circular-json';\nimport Cookies from 'js-cookie'; // var CircularJSON = require('circular-json');\n\nimport { LOGIN_SUCCESS } from './types';\nconst csrftoken = Cookies.get('csrftoken');\nexport const loginUser = userdata => async dispatch => {\n  const config = {\n    headers: {\n      'Authorization': 'Bearer ' + 'token generated from fiddler after running auth',\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-CSRFToken': csrftoken\n    }\n  };\n  const body = CircularJSON.stringify(userdata);\n\n  try {\n    // const res = await axios.post('https://viddey-backend.herokuapp.com/api/v1/login', body, config, {xsrfCookieName: 'XSRF-TOKEN', xsrfHeaderName: 'X-XSRF-TOKEN'});\n    const res = await axios.post('https://viddey-backend.herokuapp.com/api/v1/login', body);\n    console.log('dvdsvdsvdsv', res);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log('errorerror', error);\n  }\n};","map":{"version":3,"sources":["D:/rajan-work/saas/src/actions/authAction.js"],"names":["axios","CircularJSON","Cookies","LOGIN_SUCCESS","csrftoken","get","loginUser","userdata","dispatch","config","headers","body","stringify","res","post","console","log","type","payload","data","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AACA,SACCC,aADD,QAEO,SAFP;AAGA,MAAMC,SAAS,GAAGF,OAAO,CAACG,GAAR,CAAY,WAAZ,CAAlB;AACA,OAAO,MAAMC,SAAS,GAAGC,QAAQ,IAAI,MAAMC,QAAN,IAAiB;AAClD,QAAMC,MAAM,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAE,uBAAiB,YAAY,iDAA/B;AACzB,gBAAU,kBADe;AAEzB,sBAAgB,kBAFS;AAEU,qBAAeN;AAFzB;AAAX,GAAf;AAGH,QAAMO,IAAI,GAAGV,YAAY,CAACW,SAAb,CAAuBL,QAAvB,CAAb;;AACG,MAAI;AACN;AACA,UAAMM,GAAG,GAAG,MAAMb,KAAK,CAACc,IAAN,CAAW,mDAAX,EAAgEH,IAAhE,CAAlB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BH,GAA1B;AACAL,IAAAA,QAAQ,CAAC;AACRS,MAAAA,IAAI,EAAEd,aADE;AAERe,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFL,KAAD,CAAR;AAIG,GARD,CAQE,OAAOC,KAAP,EAAc;AAClBL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBI,KAAzB;AACA;AACD,CAhBM","sourcesContent":["import axios from 'axios';\r\nimport CircularJSON from 'circular-json';\r\nimport Cookies from 'js-cookie'\r\n// var CircularJSON = require('circular-json');\r\nimport {\r\n\tLOGIN_SUCCESS\r\n} from './types';\r\nconst csrftoken = Cookies.get('csrftoken');\r\nexport const loginUser = userdata => async dispatch =>{\r\n    const config = { headers: { 'Authorization': 'Bearer ' + 'token generated from fiddler after running auth',\r\n     'Accept': 'application/json',\r\n     'Content-Type': 'application/json','X-CSRFToken': csrftoken  } };\r\n\tconst body = CircularJSON.stringify(userdata);\r\n    try {\r\n\t\t// const res = await axios.post('https://viddey-backend.herokuapp.com/api/v1/login', body, config, {xsrfCookieName: 'XSRF-TOKEN', xsrfHeaderName: 'X-XSRF-TOKEN'});\r\n\t\tconst res = await axios.post('https://viddey-backend.herokuapp.com/api/v1/login', body);\r\n\t\tconsole.log('dvdsvdsvdsv',res);\r\n\t\tdispatch({\r\n\t\t\ttype: LOGIN_SUCCESS,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n    } catch (error) {\r\n\t\tconsole.log('errorerror',error);\r\n\t}   \r\n};"]},"metadata":{},"sourceType":"module"}