{"ast":null,"code":"import axios from 'axios';\nimport { GET_CAMPAIGN, GET_ALL_CAMPAIGN, CAMPAIGN_ERROR } from './types';\nexport const getAllCampaign = () => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get('https://viddey-backend.herokuapp.com/api/v1/campaigns');\n    console.log('campaign', res);\n    dispatch({\n      type: GET_ALL_CAMPAIGN,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CAMPAIGN_ERROR,\n      payload: err.response\n    });\n  }\n};\nexport const getCampaignById = camprowId => async dispatch => {\n  const config = {\n    headers: {\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    }\n  };\n\n  try {\n    const res = await axios.get(`https://viddey-backend.herokuapp.com/api/v1/campaigns/${camprowId}`, {\n      config\n    });\n    console.log('campaign', res);\n    dispatch({\n      type: GET_CAMPAIGN,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CAMPAIGN_ERROR,\n      payload: err.response\n    });\n  }\n};","map":{"version":3,"sources":["D:/rajan-work/gol/src/actions/campaignAction.js"],"names":["axios","GET_CAMPAIGN","GET_ALL_CAMPAIGN","CAMPAIGN_ERROR","getAllCampaign","dispatch","config","headers","res","get","console","log","type","payload","data","err","response","getCampaignById","camprowId","localStorage","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,YAAV,EAAwBC,gBAAxB,EAA0CC,cAA1C,QAAiE,SAAjE;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAMC,QAAN,IAAiB;AACjD,QAAMC,MAAM,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAAX,GAAf;;AACA,MAAI;AACN,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,uDAAV,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBH,GAAvB;AACAH,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEV,gBADC;AAEPW,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFN,KAAD,CAAR;AAIA,GAPE,CAOD,OAAOC,GAAP,EAAY;AACbV,IAAAA,QAAQ,CAAC;AACCO,MAAAA,IAAI,EAAET,cADP;AAERU,MAAAA,OAAO,EAAEE,GAAG,CAACC;AAFL,KAAD,CAAR;AAIA;AACD,CAfM;AAiBP,OAAO,MAAMC,eAAe,GAAGC,SAAS,IAAI,MAAMb,QAAN,IAAiB;AACzD,QAAMC,MAAM,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAE,uBAAkB,UAASY,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAA3D;AAAX,GAAf;;AACA,MAAI;AACN,UAAMZ,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,yDAAwDS,SAAU,EAA7E,EAAgF;AAACZ,MAAAA;AAAD,KAAhF,CAAlB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBH,GAAvB;AACAH,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEX,YADC;AAEPY,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFN,KAAD,CAAR;AAIA,GAPE,CAOD,OAAOC,GAAP,EAAY;AACbV,IAAAA,QAAQ,CAAC;AACCO,MAAAA,IAAI,EAAET,cADP;AAERU,MAAAA,OAAO,EAAEE,GAAG,CAACC;AAFL,KAAD,CAAR;AAIA;AACD,CAfM","sourcesContent":["import axios from 'axios';\r\nimport  { GET_CAMPAIGN, GET_ALL_CAMPAIGN, CAMPAIGN_ERROR }  from './types';\r\n\r\nexport const getAllCampaign = () => async dispatch =>{\r\n    const config = { headers: { 'Content-Type': 'application/json' } };\r\n    try {\r\n\t\tconst res = await axios.get('https://viddey-backend.herokuapp.com/api/v1/campaigns');\r\n\t\tconsole.log('campaign',res);\r\n\t\tdispatch({\r\n\t\t\t\ttype: GET_ALL_CAMPAIGN,\r\n\t\t\t\tpayload: res.data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n            type: CAMPAIGN_ERROR,    \r\n\t\t\tpayload: err.response\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport const getCampaignById = camprowId => async dispatch =>{\r\n    const config = { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } };\r\n    try {\r\n\t\tconst res = await axios.get(`https://viddey-backend.herokuapp.com/api/v1/campaigns/${camprowId}`, {config});\r\n\t\tconsole.log('campaign',res);\r\n\t\tdispatch({\r\n\t\t\t\ttype: GET_CAMPAIGN,\r\n\t\t\t\tpayload: res.data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n            type: CAMPAIGN_ERROR,    \r\n\t\t\tpayload: err.response\r\n\t\t});\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}