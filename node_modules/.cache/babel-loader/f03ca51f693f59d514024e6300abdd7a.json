{"ast":null,"code":"import axios from 'axios';\nimport { GET_CAMPAIGN, GET_ALL_CAMPAIGN, CAMPAIGN_ERROR } from './types';\nexport const getAllCampaign = () => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.get('https://viddey-backend.herokuapp.com/api/v1/campaigns');\n    console.log('campaign', res);\n    dispatch({\n      type: GET_ALL_CAMPAIGN,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CAMPAIGN_ERROR,\n      payload: err.response\n    });\n  }\n};\nexport const getCampaignById = camprowId => async dispatch => {\n  console.log('camprowId', camprowId);\n  const config = {\n    headers: {\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    }\n  };\n\n  try {\n    // const res = await axios.get(`https://viddey-backend.herokuapp.com/api/v1/campaigns/${camprowId}`, {config});\n    // console.log('campaign',res);\n    // dispatch({\n    // \t\ttype: GET_CAMPAIGN,\n    // \t\tpayload: res.data\n    // });\n    fetch(`https://viddey-backend.herokuapp.com/api/v1/campaigns/${camprowId}`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => response.json()).then(response => {\n      console.log('response', response);\n      dispatch({\n        type: GET_CAMPAIGN,\n        payload: response.payload.id\n      }); // setItems(response.payload);\n      // setItemsPage(response.payload.pageName);\n    }).catch(err => {\n      console.log(err);\n    });\n  } catch (err) {\n    dispatch({\n      type: CAMPAIGN_ERROR,\n      payload: err.response\n    });\n  }\n};","map":{"version":3,"sources":["D:/rajan-work/gol/src/actions/campaignAction.js"],"names":["axios","GET_CAMPAIGN","GET_ALL_CAMPAIGN","CAMPAIGN_ERROR","getAllCampaign","dispatch","config","headers","res","get","console","log","type","payload","data","err","response","getCampaignById","camprowId","localStorage","getItem","fetch","then","json","id","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,YAAV,EAAwBC,gBAAxB,EAA0CC,cAA1C,QAAiE,SAAjE;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAMC,QAAN,IAAiB;AACjD,QAAMC,MAAM,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAAX,GAAf;;AACA,MAAI;AACN,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,uDAAV,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBH,GAAvB;AACAH,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEV,gBADC;AAEPW,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFN,KAAD,CAAR;AAIA,GAPE,CAOD,OAAOC,GAAP,EAAY;AACbV,IAAAA,QAAQ,CAAC;AACCO,MAAAA,IAAI,EAAET,cADP;AAERU,MAAAA,OAAO,EAAEE,GAAG,CAACC;AAFL,KAAD,CAAR;AAIA;AACD,CAfM;AAiBP,OAAO,MAAMC,eAAe,GAAGC,SAAS,IAAI,MAAMb,QAAN,IAAiB;AAC5DK,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBO,SAAxB;AACG,QAAMZ,MAAM,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAE,uBAAkB,UAASY,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAA3D;AAAX,GAAf;;AACA,MAAI;AACN;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,KAAK,CAAE,yDAAwDH,SAAU,EAApE,EAAuE;AAClE,gBAAU,KADwD;AAElE,iBAAW;AACP,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AAFuD,KAAvE,CAAL,CAMOE,IANP,CAMYN,QAAQ,IAAIA,QAAQ,CAACO,IAAT,EANxB,EAOOD,IAPP,CAOYN,QAAQ,IAAI;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBK,QAAvB;AACTX,MAAAA,QAAQ,CAAC;AACRO,QAAAA,IAAI,EAAEX,YADE;AAERY,QAAAA,OAAO,EAAEG,QAAQ,CAACH,OAAT,CAAiBW;AAFlB,OAAD,CAAR,CAFuB,CAMd;AACA;AACH,KAfP,EAgBOC,KAhBP,CAgBaV,GAAG,IAAI;AAAEL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACf,KAjBP;AAkBA,GAzBE,CAyBD,OAAOA,GAAP,EAAY;AACbV,IAAAA,QAAQ,CAAC;AACCO,MAAAA,IAAI,EAAET,cADP;AAERU,MAAAA,OAAO,EAAEE,GAAG,CAACC;AAFL,KAAD,CAAR;AAIA;AACD,CAlCM","sourcesContent":["import axios from 'axios';\r\nimport  { GET_CAMPAIGN, GET_ALL_CAMPAIGN, CAMPAIGN_ERROR }  from './types';\r\n\r\nexport const getAllCampaign = () => async dispatch =>{\r\n    const config = { headers: { 'Content-Type': 'application/json' } };\r\n    try {\r\n\t\tconst res = await axios.get('https://viddey-backend.herokuapp.com/api/v1/campaigns');\r\n\t\tconsole.log('campaign',res);\r\n\t\tdispatch({\r\n\t\t\t\ttype: GET_ALL_CAMPAIGN,\r\n\t\t\t\tpayload: res.data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n            type: CAMPAIGN_ERROR,    \r\n\t\t\tpayload: err.response\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport const getCampaignById = camprowId => async dispatch =>{\r\n\tconsole.log('camprowId',camprowId);\r\n    const config = { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } };\r\n    try {\r\n\t\t// const res = await axios.get(`https://viddey-backend.herokuapp.com/api/v1/campaigns/${camprowId}`, {config});\r\n\t\t// console.log('campaign',res);\r\n\t\t// dispatch({\r\n\t\t// \t\ttype: GET_CAMPAIGN,\r\n\t\t// \t\tpayload: res.data\r\n\t\t// });\r\n\t\tfetch(`https://viddey-backend.herokuapp.com/api/v1/campaigns/${camprowId}`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log('response',response);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_CAMPAIGN,\r\n\t\t\t\tpayload: response.payload.id\r\n\t\t\t});\r\n            // setItems(response.payload);\r\n            // setItemsPage(response.payload.pageName);\r\n        })\r\n        .catch(err => { console.log(err); \r\n        });\r\n\t} catch (err) {\r\n\t\tdispatch({\r\n            type: CAMPAIGN_ERROR,    \r\n\t\t\tpayload: err.response\r\n\t\t});\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}